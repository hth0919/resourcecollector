// Code generated by protoc-gen-go. DO NOT EDIT.
// source: generated.proto

package CRM

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

func (m *ClusterInfo) Reset()         { *m = ClusterInfo{} }
func (m *ClusterInfo) String() string { return proto.CompactTextString(m) }
func (*ClusterInfo) ProtoMessage()    {}
func (*ClusterInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6ed858329eb171d, []int{0}
}

func (m *ClusterInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterInfo.Unmarshal(m, b)
}
func (m *ClusterInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterInfo.Marshal(b, m, deterministic)
}
func (m *ClusterInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterInfo.Merge(m, src)
}
func (m *ClusterInfo) XXX_Size() int {
	return xxx_messageInfo_ClusterInfo.Size(m)
}
func (m *ClusterInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterInfo proto.InternalMessageInfo

func (m *ClusterInfo) GetMetricValue() []string {
	if m != nil {
		return m.MetricValue
	}
	return nil
}

func (m *ClusterInfo) GetClustername() string {
	if m != nil {
		return m.Clustername
	}
	return ""
}

func (m *ClusterInfo) GetKubeConfig() string {
	if m != nil {
		return m.KubeConfig
	}
	return ""
}

func (m *ClusterInfo) GetAdminToken() string {
	if m != nil {
		return m.AdminToken
	}
	return ""
}

func (m *ClusterInfo) GetNodeList() []*NodeInfo {
	if m != nil {
		return m.NodeList
	}
	return nil
}

func (m *ClusterInfo) GetClusterMetricSum() map[string]float64 {
	if m != nil {
		return m.ClusterMetricSum
	}
	return nil
}

func (m *ClusterInfo) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *NodeInfo) Reset()         { *m = NodeInfo{} }
func (m *NodeInfo) String() string { return proto.CompactTextString(m) }
func (*NodeInfo) ProtoMessage()    {}
func (*NodeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6ed858329eb171d, []int{1}
}

func (m *NodeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeInfo.Unmarshal(m, b)
}
func (m *NodeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeInfo.Marshal(b, m, deterministic)
}
func (m *NodeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeInfo.Merge(m, src)
}
func (m *NodeInfo) XXX_Size() int {
	return xxx_messageInfo_NodeInfo.Size(m)
}
func (m *NodeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_NodeInfo proto.InternalMessageInfo

func (m *NodeInfo) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *NodeInfo) GetPodList() []*PodInfo {
	if m != nil {
		return m.PodList
	}
	return nil
}

func (m *NodeInfo) GetNodeMetricSum() map[string]float64 {
	if m != nil {
		return m.NodeMetricSum
	}
	return nil
}

func (m *NodeInfo) GetCpuCores() float64 {
	if m != nil {
		return m.CpuCores
	}
	return 0
}

func (m *NodeInfo) GetMemoryTotal() float64 {
	if m != nil {
		return m.MemoryTotal
	}
	return 0
}

func (m *NodeInfo) GetScrapeError() float64 {
	if m != nil {
		return m.ScrapeError
	}
	return 0
}

func (m *PodInfo) Reset()         { *m = PodInfo{} }
func (m *PodInfo) String() string { return proto.CompactTextString(m) }
func (*PodInfo) ProtoMessage()    {}
func (*PodInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6ed858329eb171d, []int{2}
}

func (m *PodInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PodInfo.Unmarshal(m, b)
}
func (m *PodInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PodInfo.Marshal(b, m, deterministic)
}
func (m *PodInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PodInfo.Merge(m, src)
}
func (m *PodInfo) XXX_Size() int {
	return xxx_messageInfo_PodInfo.Size(m)
}
func (m *PodInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PodInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PodInfo proto.InternalMessageInfo

func (m *PodInfo) GetPodName() string {
	if m != nil {
		return m.PodName
	}
	return ""
}

func (m *PodInfo) GetPodMetrics() map[string]float64 {
	if m != nil {
		return m.PodMetrics
	}
	return nil
}

func init() {
	proto.RegisterType((*ClusterInfo)(nil), "CRM.ClusterInfo")
	proto.RegisterMapType((map[string]float64)(nil), "CRM.ClusterInfo.ClusterMetricSumEntry")
	proto.RegisterType((*NodeInfo)(nil), "CRM.NodeInfo")
	proto.RegisterMapType((map[string]float64)(nil), "CRM.NodeInfo.NodeMetricSumEntry")
	proto.RegisterType((*PodInfo)(nil), "CRM.PodInfo")
	proto.RegisterMapType((map[string]float64)(nil), "CRM.PodInfo.PodMetricsEntry")
}

func init() {
	proto.RegisterFile("generated.proto", fileDescriptor_e6ed858329eb171d)
}

var fileDescriptor_e6ed858329eb171d = []byte{
	// 440 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0xdd, 0x8a, 0xd3, 0x40,
	0x14, 0x36, 0xc9, 0xb6, 0xab, 0xa7, 0x96, 0x2d, 0x83, 0xc2, 0x10, 0x44, 0x42, 0x2f, 0x96, 0xf5,
	0x26, 0x17, 0x15, 0x41, 0x44, 0x41, 0x09, 0xeb, 0x2a, 0xda, 0xa5, 0xcc, 0x2e, 0xde, 0xa7, 0xcd,
	0x69, 0x09, 0x6d, 0x32, 0x65, 0x32, 0x51, 0xfa, 0x36, 0x3e, 0x86, 0xaf, 0xe4, 0x5b, 0xc8, 0x9c,
	0x49, 0xdb, 0x49, 0xeb, 0xc5, 0xf6, 0x6e, 0xce, 0xf7, 0x43, 0xce, 0xf7, 0x65, 0x06, 0x2e, 0x16,
	0x58, 0xa2, 0x4a, 0x35, 0x66, 0xf1, 0x5a, 0x49, 0x2d, 0x59, 0x90, 0x88, 0xf1, 0xf0, 0xaf, 0x0f,
	0xbd, 0x64, 0x55, 0x57, 0x1a, 0xd5, 0xd7, 0x72, 0x2e, 0x59, 0x04, 0xbd, 0x31, 0x6a, 0x95, 0xcf,
	0x7e, 0xa4, 0xab, 0x1a, 0xb9, 0x17, 0x05, 0x57, 0x4f, 0x84, 0x0b, 0x19, 0x45, 0x63, 0x28, 0xd3,
	0x02, 0xb9, 0x1f, 0x79, 0x46, 0xe1, 0x40, 0xec, 0x25, 0xc0, 0xb7, 0x7a, 0x8a, 0x89, 0x2c, 0xe7,
	0xf9, 0x82, 0x07, 0x24, 0x70, 0x10, 0xc3, 0x7f, 0xca, 0x8a, 0xbc, 0xbc, 0x97, 0x4b, 0x2c, 0xf9,
	0x99, 0xe5, 0xf7, 0x08, 0x7b, 0x05, 0x8f, 0x6f, 0x65, 0x86, 0xdf, 0xf3, 0x4a, 0xf3, 0x4e, 0x14,
	0x5c, 0xf5, 0x46, 0xfd, 0x38, 0x11, 0xe3, 0xd8, 0x80, 0x66, 0x49, 0xb1, 0xa3, 0x99, 0x80, 0x41,
	0xf3, 0x65, 0xbb, 0xe2, 0x5d, 0x5d, 0xf0, 0x2e, 0x59, 0x2e, 0xc9, 0xe2, 0x44, 0x8b, 0x0f, 0x85,
	0xd7, 0xa5, 0x56, 0x1b, 0x71, 0xe4, 0x67, 0x0c, 0xce, 0xbe, 0xc8, 0x4a, 0xf3, 0x73, 0x5a, 0x8c,
	0xce, 0x61, 0x02, 0xcf, 0xff, 0x6b, 0x67, 0x03, 0x08, 0x96, 0xb8, 0xe1, 0x1e, 0x69, 0xcd, 0x91,
	0x3d, 0x83, 0xce, 0x4f, 0xea, 0xce, 0x34, 0xe3, 0x09, 0x3b, 0xbc, 0xf3, 0xdf, 0x7a, 0xc3, 0x3f,
	0xbe, 0x0d, 0x46, 0x45, 0x87, 0xf6, 0x7c, 0x6b, 0x3a, 0xb4, 0xee, 0xdd, 0xcc, 0x2e, 0xe1, 0x7c,
	0x22, 0x33, 0xca, 0xef, 0x53, 0x98, 0xa7, 0x14, 0x66, 0x22, 0x33, 0x8a, 0xbf, 0x25, 0xd9, 0x67,
	0xe8, 0x1b, 0xcf, 0x3e, 0x7a, 0x40, 0xea, 0xa8, 0xd5, 0x56, 0xdc, 0x92, 0xd8, 0xd0, 0x6d, 0x9b,
	0xd9, 0x25, 0x59, 0xd7, 0x89, 0x54, 0x58, 0xd1, 0xef, 0xf0, 0xc4, 0x6e, 0xb6, 0x17, 0xa2, 0x90,
	0x6a, 0x73, 0x2f, 0x75, 0xba, 0xe2, 0x1d, 0xa2, 0x5d, 0xc8, 0x28, 0xee, 0x66, 0x2a, 0x5d, 0xe3,
	0xb5, 0x52, 0x52, 0xf1, 0xae, 0x55, 0x38, 0x50, 0xf8, 0x11, 0xd8, 0xf1, 0x12, 0x27, 0x55, 0xf7,
	0xdb, 0xa3, 0x4a, 0xa8, 0x39, 0x4e, 0x47, 0xa7, 0xb8, 0xed, 0xc8, 0xde, 0x03, 0x4c, 0x64, 0x66,
	0x3f, 0x53, 0x35, 0xd5, 0xbd, 0x70, 0xab, 0x8b, 0xf7, 0xb4, 0x2d, 0xc2, 0xd1, 0x87, 0x1f, 0xe0,
	0xe2, 0x80, 0x3e, 0x65, 0xc5, 0xd1, 0x2f, 0x80, 0x1b, 0xd4, 0xcd, 0x2d, 0x61, 0xa3, 0xd6, 0x34,
	0x38, 0xbc, 0x8c, 0xe1, 0x11, 0x32, 0x7c, 0xc4, 0xde, 0x40, 0xff, 0x06, 0xf5, 0xb2, 0x9e, 0xe2,
	0xcc, 0x3e, 0x94, 0x07, 0xd9, 0xa6, 0x5d, 0x7a, 0xce, 0xaf, 0xff, 0x05, 0x00, 0x00, 0xff, 0xff,
	0x8c, 0x78, 0x14, 0xf1, 0xe1, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GetClusterClient is the client API for GetCluster service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GetClusterClient interface {
	GetCluster(ctx context.Context, in *ClusterInfo, opts ...grpc.CallOption) (*ClusterInfo, error)
	Getkubeconfig(ctx context.Context, in *ClusterInfo, opts ...grpc.CallOption) (*ClusterInfo, error)
}

type getClusterClient struct {
	cc grpc.ClientConnInterface
}

func NewGetClusterClient(cc grpc.ClientConnInterface) GetClusterClient {
	return &getClusterClient{cc}
}

func (c *getClusterClient) GetCluster(ctx context.Context, in *ClusterInfo, opts ...grpc.CallOption) (*ClusterInfo, error) {
	out := new(ClusterInfo)
	err := c.cc.Invoke(ctx, "/CRM.GetCluster/GetCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *getClusterClient) Getkubeconfig(ctx context.Context, in *ClusterInfo, opts ...grpc.CallOption) (*ClusterInfo, error) {
	out := new(ClusterInfo)
	err := c.cc.Invoke(ctx, "/CRM.GetCluster/Getkubeconfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GetClusterServer is the server API for GetCluster service.
type GetClusterServer interface {
	GetCluster(context.Context, *ClusterInfo) (*ClusterInfo, error)
	Getkubeconfig(context.Context, *ClusterInfo) (*ClusterInfo, error)
}

// UnimplementedGetClusterServer can be embedded to have forward compatible implementations.
type UnimplementedGetClusterServer struct {
}

func (*UnimplementedGetClusterServer) GetCluster(ctx context.Context, req *ClusterInfo) (*ClusterInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCluster not implemented")
}
func (*UnimplementedGetClusterServer) Getkubeconfig(ctx context.Context, req *ClusterInfo) (*ClusterInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Getkubeconfig not implemented")
}

func RegisterGetClusterServer(s *grpc.Server, srv GetClusterServer) {
	s.RegisterService(&_GetCluster_serviceDesc, srv)
}

func _GetCluster_GetCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClusterInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GetClusterServer).GetCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CRM.GetCluster/GetCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GetClusterServer).GetCluster(ctx, req.(*ClusterInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _GetCluster_Getkubeconfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClusterInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GetClusterServer).Getkubeconfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CRM.GetCluster/Getkubeconfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GetClusterServer).Getkubeconfig(ctx, req.(*ClusterInfo))
	}
	return interceptor(ctx, in, info, handler)
}

var _GetCluster_serviceDesc = grpc.ServiceDesc{
	ServiceName: "CRM.GetCluster",
	HandlerType: (*GetClusterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCluster",
			Handler:    _GetCluster_GetCluster_Handler,
		},
		{
			MethodName: "Getkubeconfig",
			Handler:    _GetCluster_Getkubeconfig_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "generated.proto",
}
